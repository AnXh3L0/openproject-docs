<div><div class="description"></div><h1>Forms</h1><div class="panel panel-default"><div class="panel-body"><p>This API provides forms as a concept to aid in editing or creating resources. The goal of forms is to:</p>
<ul>
<li>
<p>make writable properties of a resource discoverable</p>
</li>
<li>
<p>show to which values a property can be set</p>
</li>
<li>
<p>validate changes to a resource and indicate validation errors</p>
</li>
</ul>
<p>These benefits aside, a client can freely choose to immediately edit a resource without prior validation by a form.
In the case of an invalid request the edit will fail and return appropriate errors nevertheless.</p>
<p>A form is associated to a single resource and aids in performing changes on that resource.
When posting to a form endpoint with an empty request body or an empty JSON object,
you will receive an initial form for the associated resource.
Subsequent calls to the form should contain a single JSON object as described by the form.</p>
<h2 id="header-actions-1">Actions <a class="permalink" href="#header-actions-1" aria-hidden="true">¶</a></h2>
<table>
<thead>
<tr>
<th style="text-align:center">Link</th>
<th>Description</th>
<th>Condition</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">validate</td>
<td>Validate changes, show errors and allowed values for changed resource</td>
<td></td>
</tr>
<tr>
<td style="text-align:center">commit</td>
<td>Actually perform changes to the resource</td>
<td>form content is valid</td>
</tr>
<tr>
<td style="text-align:center">previewMarkup</td>
<td>Post markup (e.g. markdown) here to receive an HTML-rendered response</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="header-linked-properties-1">Linked Properties <a class="permalink" href="#header-linked-properties-1" aria-hidden="true">¶</a></h2>
<table>
<thead>
<tr>
<th style="text-align:center">Link</th>
<th>Description</th>
<th>Type</th>
<th>Nullable</th>
<th>Supported operations</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">self</td>
<td>This form</td>
<td>Form</td>
<td></td>
<td>READ</td>
</tr>
</tbody>
</table>
<h2 id="header-embedded-properties--1">Embedded Properties: <a class="permalink" href="#header-embedded-properties--1" aria-hidden="true">¶</a></h2>
<p>Apart from the linked properties, forms contain always three other embedded properties:</p>
<ul>
<li>
<p><code>payload</code></p>
</li>
<li>
<p><code>schema</code></p>
</li>
<li>
<p><code>validationErrors</code></p>
</li>
</ul>
<p>Their purpose is explained below.</p>
<h3 id="header-payload-1">Payload <a class="permalink" href="#header-payload-1" aria-hidden="true">¶</a></h3>
<p>The payload contains an edited version of the resource that will be modified when commiting the form.
This representation contains all writable properties of the resource and reflects all changes that the latest call to <strong>validate</strong> included,
thereby acting as a preview for the changes.</p>
<p>In case the client tries to set the value to something invalid, the invalid change is also reflected here. However a validation error (see below)
indicates that a commit of this payload would fail.</p>
<p>It might happen that setting one property affects the allowed values for another property. Thus by changing a property A
the current value of another property B might become invalid. If the client did not yet touch the value of B, the payload will
contain a default value for that property. Nevertheless the client will also receive an apropriate validation error for value B.</p>
<p>The content of this element <em>can</em> be used as a template for the request body of a call to <strong>validate</strong> or <strong>commit</strong>.</p>
<p>A call to <strong>validate</strong> and <strong>commit</strong> does not need to include all properties that were defined in the <code>payload</code> section.
It is only necessary to include the properties that you want to change, as well as the <code>lockVersion</code> if one is present.
However you <em>may</em> include all the properties sent in the <code>payload</code> section.</p>
<h3 id="header-schema-1">Schema <a class="permalink" href="#header-schema-1" aria-hidden="true">¶</a></h3>
<p>The schema embedded in a form is a normal <a href="#schema">schema describing the underlying resource</a>.
However, the embedded schema can change with each revalidation of the form.
For example it might be possible, that changing the type of a work package affects its available properties,
as well as possible values for certain properties.
As this makes the embedded schema very dynamic, it is not included as a static link.</p>
<h3 id="header-validation-errors-1">Validation Errors <a class="permalink" href="#header-validation-errors-1" aria-hidden="true">¶</a></h3>
<p>Like a <a href="#schema">schema</a> the validation errors build a dictionary where the key is a property name.
Each value is an error object that indicates the error that occured validating the corresponding property.
There are only key value pairs for properties that failed validation, the element is empty if all validations succeeded.</p>
<p>However note that even in the case of validation errors, the response you receive from the form endpoint will be an HTTP 200.
That is because the main purpose of a form is helping the client to sort out validation errors.</p>
<h2 id="forms-example-form">Example Form&nbsp;<a href="#forms-example-form" class="permalink"><i class="fa fa-link"></i></a></h2><section id="forms-example-form-post" class="panel panel-success"><div class="panel-heading"><div style="float:right"><span style="text-transform: lowercase">show or validate form</span></div><div style="float:left"><a href="#forms-example-form-post" class="btn btn-xs btn-success">POST</a></div><div style="overflow:hidden" class="panel-heading-code"><code>/api/v3/example/form</code></div></div><div class="panel-body"><p>This is an example of how a form might look like. Note that this endpoint does not exist in the actual implementation.</p>
</div><ul class="list-group"><li class="list-group-item"><strong>Request</strong><a data-toggle="collapse" data-target="#collapse-bfc151afa67186757225424313ae638e" class="pull-right collapsed">Toggle details</a></li><li id="collapse-bfc151afa67186757225424313ae638e" class="list-group-item panel-collapse collapse"><h5>Headers</h5><pre><code><span class="hljs-attribute">Content-Type</span>: <span class="hljs-string">application/json</span><br/></code></pre><h5>Body</h5><pre><code>{
  "<span class="hljs-attribute">lockVersion</span>": <span class="hljs-value"><span class="hljs-number">5</span></span>,
  "<span class="hljs-attribute">_type</span>": <span class="hljs-value"><span class="hljs-string">"Example"</span></span>,
  "<span class="hljs-attribute">subject</span>": <span class="hljs-value"><span class="hljs-string">"An example title"</span>
</span>}</code></pre></li><li class="list-group-item"><strong>Response&nbsp;&nbsp;<code>200</code></strong><a data-toggle="collapse" data-target="#collapse-9d9a29f93110690bc1d1270171c2fba4" class="pull-right collapsed">Toggle details</a></li><li id="collapse-9d9a29f93110690bc1d1270171c2fba4" class="list-group-item panel-collapse collapse"><h5>Headers</h5><pre><code><span class="hljs-attribute">Content-Type</span>: <span class="hljs-string">application/hal+json</span><br/></code></pre><h5>Body</h5><pre><code>{
  "<span class="hljs-attribute">_links</span>": <span class="hljs-value">{
    "<span class="hljs-attribute">self</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/example/form"</span>
    </span>}</span>,
    "<span class="hljs-attribute">validate</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/example/form"</span></span>,
      "<span class="hljs-attribute">method</span>": <span class="hljs-value"><span class="hljs-string">"POST"</span>
    </span>}</span>,
    "<span class="hljs-attribute">previewMarkup</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/render/markdown"</span></span>,
      "<span class="hljs-attribute">method</span>": <span class="hljs-value"><span class="hljs-string">"POST"</span>
    </span>}</span>,
    "<span class="hljs-attribute">commit</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/example"</span></span>,
      "<span class="hljs-attribute">method</span>": <span class="hljs-value"><span class="hljs-string">"PATCH"</span>
    </span>}
  </span>}</span>,
  "<span class="hljs-attribute">_type</span>": <span class="hljs-value"><span class="hljs-string">"Form"</span></span>,
  "<span class="hljs-attribute">_embedded</span>": <span class="hljs-value">{
    "<span class="hljs-attribute">payload</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">_links</span>": <span class="hljs-value">{
        "<span class="hljs-attribute">status</span>": <span class="hljs-value">{
          "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/statuses/1"</span>
        </span>}
      </span>}</span>,
      "<span class="hljs-attribute">_type</span>": <span class="hljs-value"><span class="hljs-string">"Example"</span></span>,
      "<span class="hljs-attribute">lockVersion</span>": <span class="hljs-value"><span class="hljs-number">5</span></span>,
      "<span class="hljs-attribute">subject</span>": <span class="hljs-value"><span class="hljs-string">"An example title"</span>
    </span>}</span>,
    "<span class="hljs-attribute">schema</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">_type</span>": <span class="hljs-value"><span class="hljs-string">"Schema"</span></span>,
      "<span class="hljs-attribute">_links</span>": <span class="hljs-value">{
        "<span class="hljs-attribute">self</span>": <span class="hljs-value">{
          "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/example/schema"</span>
        </span>}
      </span>}</span>,
      "<span class="hljs-attribute">lockVersion</span>": <span class="hljs-value">{
        "<span class="hljs-attribute">type</span>": <span class="hljs-value"><span class="hljs-string">"Integer"</span></span>,
        "<span class="hljs-attribute">writable</span>": <span class="hljs-value"><span class="hljs-literal">false</span>
      </span>}</span>,
      "<span class="hljs-attribute">subject</span>": <span class="hljs-value">{
        "<span class="hljs-attribute">type</span>": <span class="hljs-value"><span class="hljs-string">"String"</span></span>,
        "<span class="hljs-attribute">minLength</span>": <span class="hljs-value"><span class="hljs-number">1</span></span>,
        "<span class="hljs-attribute">maxLength</span>": <span class="hljs-value"><span class="hljs-number">255</span>
      </span>}</span>,
      "<span class="hljs-attribute">status</span>": <span class="hljs-value">{
        "<span class="hljs-attribute">_links</span>": <span class="hljs-value">{
          "<span class="hljs-attribute">allowedValues</span>": <span class="hljs-value">[
            {
              "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/statuses/1"</span></span>,
              "<span class="hljs-attribute">title</span>": <span class="hljs-value"><span class="hljs-string">"New"</span>
            </span>},
            {
              "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/statuses/2"</span></span>,
              "<span class="hljs-attribute">title</span>": <span class="hljs-value"><span class="hljs-string">"Closed"</span>
            </span>}
          ]
        </span>}</span>,
        "<span class="hljs-attribute">type</span>": <span class="hljs-value"><span class="hljs-string">"Status"</span></span>,
        "<span class="hljs-attribute">_embedded</span>": <span class="hljs-value">{
          "<span class="hljs-attribute">allowedValues</span>": <span class="hljs-value">[
            {
              "<span class="hljs-attribute">_links</span>": <span class="hljs-value">{
                "<span class="hljs-attribute">self</span>": <span class="hljs-value">{
                  "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/statuses/1"</span>
                </span>}
              </span>}</span>,
              "<span class="hljs-attribute">_type</span>": <span class="hljs-value"><span class="hljs-string">"Status"</span></span>,
              "<span class="hljs-attribute">id</span>": <span class="hljs-value"><span class="hljs-number">1</span></span>,
              "<span class="hljs-attribute">name</span>": <span class="hljs-value"><span class="hljs-string">"New"</span></span>,
              "<span class="hljs-attribute">position</span>": <span class="hljs-value"><span class="hljs-number">1</span></span>,
              "<span class="hljs-attribute">isDefault</span>": <span class="hljs-value"><span class="hljs-literal">true</span></span>,
              "<span class="hljs-attribute">isClosed</span>": <span class="hljs-value"><span class="hljs-literal">false</span></span>,
              "<span class="hljs-attribute">defaultDoneRatio</span>": <span class="hljs-value"><span class="hljs-number">0</span></span>,
              "<span class="hljs-attribute">createdAt</span>": <span class="hljs-value"><span class="hljs-string">"2014-05-21T08:51:20Z"</span></span>,
              "<span class="hljs-attribute">updatedAt</span>": <span class="hljs-value"><span class="hljs-string">"2014-05-21T09:12:00Z"</span>
            </span>},
            {
              "<span class="hljs-attribute">_links</span>": <span class="hljs-value">{
                "<span class="hljs-attribute">self</span>": <span class="hljs-value">{
                  "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/statuses/2"</span>
                </span>}
              </span>}</span>,
              "<span class="hljs-attribute">_type</span>": <span class="hljs-value"><span class="hljs-string">"Status"</span></span>,
              "<span class="hljs-attribute">id</span>": <span class="hljs-value"><span class="hljs-number">2</span></span>,
              "<span class="hljs-attribute">name</span>": <span class="hljs-value"><span class="hljs-string">"Closed"</span></span>,
              "<span class="hljs-attribute">position</span>": <span class="hljs-value"><span class="hljs-number">2</span></span>,
              "<span class="hljs-attribute">isDefault</span>": <span class="hljs-value"><span class="hljs-literal">false</span></span>,
              "<span class="hljs-attribute">isClosed</span>": <span class="hljs-value"><span class="hljs-literal">true</span></span>,
              "<span class="hljs-attribute">defaultDoneRatio</span>": <span class="hljs-value"><span class="hljs-number">100</span></span>,
              "<span class="hljs-attribute">createdAt</span>": <span class="hljs-value"><span class="hljs-string">"2014-05-21T08:51:20Z"</span></span>,
              "<span class="hljs-attribute">updatedAt</span>": <span class="hljs-value"><span class="hljs-string">"2014-05-21T09:12:00Z"</span>
            </span>}
          ]
        </span>}
      </span>}
    </span>}</span>,
    "<span class="hljs-attribute">validationErrors</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">subject</span>": <span class="hljs-value">{
        "<span class="hljs-attribute">_type</span>": <span class="hljs-value"><span class="hljs-string">"Error"</span></span>,
        "<span class="hljs-attribute">errorIdentifier</span>": <span class="hljs-value"><span class="hljs-string">"urn:openproject-org:api:v3:errors:BadExampleError"</span></span>,
        "<span class="hljs-attribute">message</span>": <span class="hljs-value"><span class="hljs-string">"For the purpose of this example we need a validation error. The remainder of the response pretends there were no errors."</span>
      </span>}
    </span>}
  </span>}
</span>}</code></pre></li><li class="list-group-item"><strong>Response&nbsp;&nbsp;<code>400</code></strong><a data-toggle="collapse" data-target="#collapse-09bc60d65aa4781dbc43706d23b700b5" class="pull-right collapsed">Toggle details</a></li><li id="collapse-09bc60d65aa4781dbc43706d23b700b5" class="list-group-item panel-collapse collapse"><div class="description"><p>Occurs when the client did not send a valid JSON object in the request body and the request body
was not empty.</p>
<p>Note that this error only occurs when the content is not at all a single JSON object.
It <strong>does not occur</strong> for requests containing undefined properties or invalid property values.</p>
</div><h5>Headers</h5><pre><code><span class="hljs-attribute">Content-Type</span>: <span class="hljs-string">application/hal+json</span><br/></code></pre><h5>Body</h5><pre><code>{
  "<span class="hljs-attribute">_type</span>": <span class="hljs-value"><span class="hljs-string">"Error"</span></span>,
  "<span class="hljs-attribute">errorIdentifier</span>": <span class="hljs-value"><span class="hljs-string">"urn:openproject-org:api:v3:errors:InvalidRequestBody"</span></span>,
  "<span class="hljs-attribute">message</span>": <span class="hljs-value"><span class="hljs-string">"The request body was neither empty, nor did it contain a single JSON object."</span>
</span>}</code></pre></li><li class="list-group-item"><strong>Response&nbsp;&nbsp;<code>403</code></strong><a data-toggle="collapse" data-target="#collapse-26aea8c21f85ab411d40a96406841493" class="pull-right collapsed">Toggle details</a></li><li id="collapse-26aea8c21f85ab411d40a96406841493" class="list-group-item panel-collapse collapse"><div class="description"><p>Returned if the client does not have sufficient permissions to modify the associated resource.</p>
</div><h5>Headers</h5><pre><code><span class="hljs-attribute">Content-Type</span>: <span class="hljs-string">application/hal+json</span><br/></code></pre><h5>Body</h5><pre><code>{
  "<span class="hljs-attribute">_type</span>": <span class="hljs-value"><span class="hljs-string">"Error"</span></span>,
  "<span class="hljs-attribute">errorIdentifier</span>": <span class="hljs-value"><span class="hljs-string">"urn:openproject-org:api:v3:errors:MissingPermission"</span></span>,
  "<span class="hljs-attribute">message</span>": <span class="hljs-value"><span class="hljs-string">"You are not allowed to edit example resources."</span>
</span>}</code></pre></li><li class="list-group-item"><strong>Response&nbsp;&nbsp;<code>409</code></strong><a data-toggle="collapse" data-target="#collapse-f210b6cfb2d0181fd23df4077daf162b" class="pull-right collapsed">Toggle details</a></li><li id="collapse-f210b6cfb2d0181fd23df4077daf162b" class="list-group-item panel-collapse collapse"><div class="description"><p>Returned if underlying resource was changed since the client requested the form. This is determined using the <code>lockVersion</code> property.</p>
</div><h5>Headers</h5><pre><code><span class="hljs-attribute">Content-Type</span>: <span class="hljs-string">application/hal+json</span><br/></code></pre><h5>Body</h5><pre><code>{
  "<span class="hljs-attribute">_type</span>": <span class="hljs-value"><span class="hljs-string">"Error"</span></span>,
  "<span class="hljs-attribute">errorIdentifier</span>": <span class="hljs-value"><span class="hljs-string">"urn:openproject-org:api:v3:errors:UpdateConflict"</span></span>,
  "<span class="hljs-attribute">message</span>": <span class="hljs-value"><span class="hljs-string">"The resource you are about to edit was changed in the meantime."</span>
</span>}</code></pre></li></ul></section></div></div></div>