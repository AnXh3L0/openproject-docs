---
source_path: docs/api/apiv3/group-objects.apib
---
<div><div class="description"></div><h1>Collections</h1><div class="panel panel-default"><div class="panel-body"><p>Whenever a client calls a resource that can return more than one element, it will receive a collection of elements.
However as collections can become quite large, the API will <strong>not</strong> simply return a JSON array, but a special collection
object that will contain the actual elements in its embedded property <code>elements</code>.</p>
<p>Collections <em>may</em> be paginated, this means that a single response from the server will not contain all elements of the collection,
but only a subset. In this case the client can issue further requests to retrieve the remaining elements.
There are two ways to access the result pages of a paginated collection:</p>
<ul>
<li>
<p>offset based pagination</p>
</li>
<li>
<p>cursor based pagination</p>
</li>
</ul>
<p>The available ways of pagination depend on the collection queried. Some collections feature no pagination at all, meaning they
will always return all elements. Others might only offer one of the two pagination methods or both of them.
An explanation of <a href="#collections-offset-based-pagination">offset</a> and <a href="#collections-cursor-based-pagination">cursor</a> based
pagination can be found below the links table.</p>
<p>A collection also carries meta information like the total count of elements in the collection or - in case of a paginated collection -
the amount of elements returned in this response and action links to retrieve the remaining elements.</p>
<h2 id="header-local-properties-1">Local Properties <a class="permalink" href="#header-local-properties-1" aria-hidden="true">¶</a></h2>
<table>
<thead>
<tr>
<th style="text-align:center">Property</th>
<th>Description</th>
<th>Type</th>
<th>Availability</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">total</td>
<td>The total amount of elements available in the collection</td>
<td>Integer</td>
<td>always</td>
</tr>
<tr>
<td style="text-align:center">pageSize</td>
<td>Amount of elements that a response will hold</td>
<td>Integer</td>
<td>when paginated</td>
</tr>
<tr>
<td style="text-align:center">count</td>
<td>Actual amount of elements in this response</td>
<td>Integer</td>
<td>always</td>
</tr>
<tr>
<td style="text-align:center">offset</td>
<td>The page number that is requested from paginated collection</td>
<td>Integer</td>
<td>when offset based available</td>
</tr>
<tr>
<td style="text-align:center">groups</td>
<td>Summarized information about aggregation groups</td>
<td>Object</td>
<td>when grouping</td>
</tr>
<tr>
<td style="text-align:center">totalSums</td>
<td>Aggregations of supported values for elements of the collection</td>
<td>Object</td>
<td>when showing sums</td>
</tr>
</tbody>
</table>
<h2 id="header-links-1">Links <a class="permalink" href="#header-links-1" aria-hidden="true">¶</a></h2>
<table>
<thead>
<tr>
<th style="text-align:center">Link</th>
<th>Description</th>
<th>Availability</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">self</td>
<td>Link to the current page in the collection</td>
<td>always</td>
</tr>
<tr>
<td style="text-align:center">changeSize</td>
<td>Templated link to change the page size, might change relative position</td>
<td>when paginated</td>
</tr>
<tr>
<td style="text-align:center">jumpTo</td>
<td>Templated link to jump to a specified offset</td>
<td>when offset based available</td>
</tr>
<tr>
<td style="text-align:center">nextByOffset</td>
<td>Link to retrieve the following page of elements (offset based)</td>
<td>when offset based available</td>
</tr>
<tr>
<td style="text-align:center">previousByOffset</td>
<td>Link to retrieve the preceding page of elements (offset based)</td>
<td>when offset based available</td>
</tr>
<tr>
<td style="text-align:center">nextByCursor</td>
<td>Link to retrieve the elements following the current page (cursor based)</td>
<td>when cursor based available</td>
</tr>
<tr>
<td style="text-align:center">previousByCursor</td>
<td>Link to retrieve the elements preceding the current page (cursor based)</td>
<td>when cursor based available</td>
</tr>
</tbody>
</table>
<h2 id="collections-offset-based-pagination">Offset based pagination&nbsp;<a href="#collections-offset-based-pagination" class="permalink"><i class="fa fa-link"></i></a></h2><p>Offset based pagination works by specifying two values: the <strong>offset</strong> and the <strong>pageSize</strong>. The page size determines how many items there will
be in a single response at most. The offset determines which page is returned as response, with 1 being the first page (one-indexed).
Note that the server might not allow arbitrarily large page sizes, a client should therefore always check the page size accepted by the server
using the <strong>pageSize</strong> property of the response.</p>
<p>The benefit of offset based pagination is that the total number of pages can be easily determined and that it is possible to jump
to arbitrary pages within the collection. Offset based pagination is therefore well suited when a result is displayed to the end user
in the form of multiple pages anyway.</p>
<p>A drawback of offset based pagination comes with concurrent modification of the collection. If the collection is modified
between two page requests, it is possible that the client receives elements close to the page boundaries twice or does not see them at all.</p>
<section id="collections-offset-based-pagination-get" class="panel panel-info"><div class="panel-heading"><div style="float:right"><span style="text-transform: lowercase">view offset based</span></div><div style="float:left"><a href="#collections-offset-based-pagination-get" class="btn btn-xs btn-primary">GET</a></div><div style="overflow:hidden" class="panel-heading-code"><code>/api/v3/examples{?offset,pageSize}</code></div></div><ul class="list-group"><li class="list-group-item bg-default"><strong>Parameters</strong></li><li class="list-group-item"><dl class="dl-horizontal"><dt>offset</dt><dd><code>integer</code>&nbsp;<span>(optional)</span>&nbsp;<span class="text-info default"><strong>Default:&nbsp;</strong><span>1</span></span>&nbsp;<span class="text-muted example"><strong>Example:&nbsp;</strong><span>25</span></span><p>Page number inside the requested collection.</p>
</dd><dt>pageSize</dt><dd><code>integer</code>&nbsp;<span>(optional)</span>&nbsp;<span class="text-muted example"><strong>Example:&nbsp;</strong><span>25</span></span><p>Number of elements to display per page.</p>
</dd></dl></li></ul><ul class="list-group"><li class="list-group-item"><strong>Response&nbsp;&nbsp;<code>200</code></strong><a data-toggle="collapse" data-target="#collapse-f14cdd44878ecb8a5faf8497e89cbc50" class="pull-right collapsed">Toggle details</a></li><li id="collapse-f14cdd44878ecb8a5faf8497e89cbc50" class="list-group-item panel-collapse collapse"><h5>Headers</h5><pre><code><span class="hljs-attribute">Content-Type</span>: <span class="hljs-string">application/hal+json</span><br/></code></pre><h5>Body</h5><pre><code>{
  "<span class="hljs-attribute">_links</span>": <span class="hljs-value">{
    "<span class="hljs-attribute">self</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/examples?offset=25&amp;pageSize=25"</span>
    </span>}</span>,
    "<span class="hljs-attribute">jumpTo</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/examples?offset={offset}&amp;pageSize=25"</span></span>,
      "<span class="hljs-attribute">templated</span>": <span class="hljs-value"><span class="hljs-literal">true</span>
    </span>}</span>,
    "<span class="hljs-attribute">changeSize</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/examples?offset=25&amp;pageSize={size}"</span></span>,
      "<span class="hljs-attribute">templated</span>": <span class="hljs-value"><span class="hljs-literal">true</span>
    </span>}</span>,
    "<span class="hljs-attribute">previousByOffset</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/examples?offset=0&amp;pageSize=25"</span>
    </span>}</span>,
    "<span class="hljs-attribute">previousByCursor</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/examples?before=bar&amp;pageSize=25"</span>
    </span>}
  </span>}</span>,
  "<span class="hljs-attribute">_type</span>": <span class="hljs-value"><span class="hljs-string">"Collection"</span></span>,
  "<span class="hljs-attribute">total</span>": <span class="hljs-value"><span class="hljs-number">27</span></span>,
  "<span class="hljs-attribute">pageSize</span>": <span class="hljs-value"><span class="hljs-number">25</span></span>,
  "<span class="hljs-attribute">count</span>": <span class="hljs-value"><span class="hljs-number">2</span></span>,
  "<span class="hljs-attribute">offset</span>": <span class="hljs-value"><span class="hljs-number">25</span></span>,
  "<span class="hljs-attribute">_embedded</span>": <span class="hljs-value">{
    "<span class="hljs-attribute">elements</span>": <span class="hljs-value">[
      {
        "<span class="hljs-attribute">foo</span>": <span class="hljs-value"><span class="hljs-string">"bar"</span>
      </span>},
      {
        "<span class="hljs-attribute">foo</span>": <span class="hljs-value"><span class="hljs-string">"baz"</span>
      </span>}
    ]
  </span>}
</span>}</code></pre></li></ul></section><h2 id="collections-cursor-based-pagination">Cursor based pagination&nbsp;<a href="#collections-cursor-based-pagination" class="permalink"><i class="fa fa-link"></i></a></h2><p>Cursor based pagination is intended to be used, when the client needs a consistent and complete (sub-) range of the collection,
e.g. in infinite scrolling scenarios. In cursor based pagination the client will receive a link to the next and
the previous page in the result set. The guarantee is, that the boundaries of that page will align with the boundaries of the current page,
regardless of changes to the collection.</p>
<p>The drawback for cursor based pagination is, that it is not immediately determinable how many “next” and how many “previous” pages there are.
Cursor based pagination is therefore less suited for use cases where you want to directly “jump” to an arbitrary page.</p>
<section id="collections-cursor-based-pagination-get" class="panel panel-info"><div class="panel-heading"><div style="float:right"><span style="text-transform: lowercase">view cursor based</span></div><div style="float:left"><a href="#collections-cursor-based-pagination-get" class="btn btn-xs btn-primary">GET</a></div><div style="overflow:hidden" class="panel-heading-code"><code>/api/v3/examples{?before,after,pageSize}</code></div></div><ul class="list-group"><li class="list-group-item bg-default"><strong>Parameters</strong></li><li class="list-group-item"><dl class="dl-horizontal"><dt>before</dt><dd><code>string</code>&nbsp;<span>(optional)</span>&nbsp;<span class="text-muted example"><strong>Example:&nbsp;</strong><span>bar</span></span><p>Display the elements preceding the given element.
Note that the value of this parameter is very specific to the collection, a client should not
try to infer values, but use the <strong>previous</strong> link offered by the collection.</p>
</dd><dt>after</dt><dd><code>string</code>&nbsp;<span>(optional)</span>&nbsp;<span class="text-muted example"><strong>Example:&nbsp;</strong><span>buz</span></span><p>Display the elements succeeding the given element.
Note that the value of this parameter is very specific to the collection, a client should not
try to infer values, but use the <strong>next</strong> link offered by the collection.</p>
</dd><dt>pageSize</dt><dd><code>integer</code>&nbsp;<span>(optional)</span>&nbsp;<span class="text-muted example"><strong>Example:&nbsp;</strong><span>25</span></span><p>Number of elements to display per page.</p>
</dd></dl></li></ul><ul class="list-group"><li class="list-group-item"><strong>Response&nbsp;&nbsp;<code>200</code></strong><a data-toggle="collapse" data-target="#collapse-149b1753747f9c3948ce9464bb71f621" class="pull-right collapsed">Toggle details</a></li><li id="collapse-149b1753747f9c3948ce9464bb71f621" class="list-group-item panel-collapse collapse"><h5>Headers</h5><pre><code><span class="hljs-attribute">Content-Type</span>: <span class="hljs-string">application/hal+json</span><br/></code></pre><h5>Body</h5><pre><code>{
  "<span class="hljs-attribute">_links</span>": <span class="hljs-value">{
    "<span class="hljs-attribute">self</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/examples?after=buz&amp;pageSize=25"</span>
    </span>}</span>,
    "<span class="hljs-attribute">changeSize</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/examples?after=buz&amp;pageSize={size}"</span></span>,
      "<span class="hljs-attribute">templated</span>": <span class="hljs-value"><span class="hljs-literal">true</span>
    </span>}</span>,
    "<span class="hljs-attribute">previousByCursor</span>": <span class="hljs-value">{
      "<span class="hljs-attribute">href</span>": <span class="hljs-value"><span class="hljs-string">"/api/v3/examples?before=bar&amp;pageSize=25"</span>
    </span>}
  </span>}</span>,
  "<span class="hljs-attribute">_type</span>": <span class="hljs-value"><span class="hljs-string">"Collection"</span></span>,
  "<span class="hljs-attribute">total</span>": <span class="hljs-value"><span class="hljs-number">27</span></span>,
  "<span class="hljs-attribute">pageSize</span>": <span class="hljs-value"><span class="hljs-number">25</span></span>,
  "<span class="hljs-attribute">count</span>": <span class="hljs-value"><span class="hljs-number">2</span></span>,
  "<span class="hljs-attribute">_embedded</span>": <span class="hljs-value">{
    "<span class="hljs-attribute">elements</span>": <span class="hljs-value">[
      {
        "<span class="hljs-attribute">foo</span>": <span class="hljs-value"><span class="hljs-string">"bar"</span>
      </span>},
      {
        "<span class="hljs-attribute">foo</span>": <span class="hljs-value"><span class="hljs-string">"baz"</span>
      </span>}
    ]
  </span>}
</span>}</code></pre></li></ul></section><h2 id="collections-aggregations">Aggregations&nbsp;<a href="#collections-aggregations" class="permalink"><i class="fa fa-link"></i></a></h2><p>Collections may support different kinds of aggregations.
Some properties can be summed up. If requested the collection will include the <code>totalSums</code> property,
which is a dictionary, where the keys represent the names of the summed properties and the values represent their sums.
Note that you have to mark a column as summable in the instance settings, to be able to retrieve its sums.</p>
<p>It is also possible to group the contents of a collection. In this case:</p>
<ul>
<li>
<p>the <code>elements</code> will be ordered by the specified group key (so that the client receives one group after another)</p>
</li>
<li>
<p>The <code>groups</code> property will contain a collection of group objects</p>
</li>
</ul>
<p>A group object contains aggregation data for the elements of a group:</p>
<h3 id="header-local-properties-2">Local Properties <a class="permalink" href="#header-local-properties-2" aria-hidden="true">¶</a></h3>
<table>
<thead>
<tr>
<th style="text-align:center">Property</th>
<th>Description</th>
<th>Type</th>
<th>Availability</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">value</td>
<td>The value to which the group belongs (e.g. the Status’ name)</td>
<td>String</td>
<td>always</td>
</tr>
<tr>
<td style="text-align:center">count</td>
<td>Actual amount of elements in this response</td>
<td>Integer</td>
<td>always</td>
</tr>
<tr>
<td style="text-align:center">sums</td>
<td>A dictionary with property sums inside this group (see <code>totalSums</code>)</td>
<td>Dictionary</td>
<td>when sums requested</td>
</tr>
</tbody>
</table>
<h2 id="header-links-2">Links <a class="permalink" href="#header-links-2" aria-hidden="true">¶</a></h2>
<table>
<thead>
<tr>
<th style="text-align:center">Link</th>
<th>Description</th>
<th>Availability</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">valueLink</td>
<td>Link to the corresponding grouping object (e.g. the Status)</td>
<td>only if grouping by a linkable object</td>
</tr>
</tbody>
</table>
<p>Note that you will always receive a <code>value</code>, but only receive a <code>valueLink</code> if the grouping was performed
on a linkable property.</p>
<section id="collections-aggregations-get" class="panel panel-info"><div class="panel-heading"><div style="float:right"><span style="text-transform: lowercase">view aggregated result</span></div><div style="float:left"><a href="#collections-aggregations-get" class="btn btn-xs btn-primary">GET</a></div><div style="overflow:hidden" class="panel-heading-code"><code>/api/v3/examples{?groupBy,showSums}</code></div></div><ul class="list-group"><li class="list-group-item bg-default"><strong>Parameters</strong></li><li class="list-group-item"><dl class="dl-horizontal"><dt>groupBy</dt><dd><code>string</code>&nbsp;<span>(optional)</span>&nbsp;<span class="text-muted example"><strong>Example:&nbsp;</strong><span>status</span></span><p>The column to group by.
Note: Aggregation is as of now only supported by the work package collection.
You can pass any column name as returned by the <a href="#queries">queries</a> endpoint.</p>
</dd><dt>showSums</dt><dd><code></code>&nbsp;<span>(optional)</span>&nbsp;<span class="text-info default"><strong>Default:&nbsp;</strong><span>false</span></span>&nbsp;</dd></dl></li></ul><ul class="list-group"><li class="list-group-item"><strong>Response&nbsp;&nbsp;<code>200</code></strong><a data-toggle="collapse" data-target="#collapse-3dcd14864e850323887b77922ef635d0" class="pull-right collapsed">Toggle details</a></li><li id="collapse-3dcd14864e850323887b77922ef635d0" class="list-group-item panel-collapse collapse"><h5>Headers</h5><pre><code><span class="hljs-attribute">Content-Type</span>: <span class="hljs-string">application/hal+json</span><br/></code></pre><h5>Body</h5><pre><code><span class="hljs-collection">{
    <span class="hljs-string">"_links"</span>: <span class="hljs-collection">{
        <span class="hljs-string">"self"</span>: <span class="hljs-collection">{ <span class="hljs-string">"href"</span>: <span class="hljs-string">"/api/v3/examples?groupBy=foo&amp;showSums=true"</span> }</span>,
        <span class="hljs-string">"changeSize"</span>: <span class="hljs-collection">{
            <span class="hljs-string">"href"</span>: <span class="hljs-string">"/api/v3/examples?after=buz&amp;pageSize={size}"</span>,
            <span class="hljs-string">"templated"</span>: <span class="hljs-literal">true</span>
        }</span>
    }</span>,
    <span class="hljs-string">"_type"</span>: <span class="hljs-string">"Collection"</span>,
    <span class="hljs-string">"total"</span>: <span class="hljs-number">5</span>,
    <span class="hljs-string">"pageSize"</span>: <span class="hljs-number">25</span>,
    <span class="hljs-string">"count"</span>: <span class="hljs-number">5</span>,
    <span class="hljs-string">"_embedded"</span>: <span class="hljs-collection">{
        <span class="hljs-string">"elements"</span>: <span class="hljs-collection">[
            <span class="hljs-collection">{ <span class="hljs-string">"foo"</span>: <span class="hljs-string">"bar"</span>, <span class="hljs-string">"i"</span>: <span class="hljs-number">1</span> }</span>,
            <span class="hljs-collection">{ <span class="hljs-string">"foo"</span>: <span class="hljs-string">"bar"</span>, <span class="hljs-string">"i"</span>: <span class="hljs-number">2</span> }</span>,
            <span class="hljs-collection">{ <span class="hljs-string">"foo"</span>: <span class="hljs-string">"bar"</span>, <span class="hljs-string">"i"</span>: <span class="hljs-number">3</span> }</span>,
            <span class="hljs-collection">{ <span class="hljs-string">"foo"</span>: <span class="hljs-string">"baz"</span>, <span class="hljs-string">"i"</span>: <span class="hljs-number">4</span> }</span>,
            <span class="hljs-collection">{ <span class="hljs-string">"foo"</span>: <span class="hljs-string">"baz"</span>, <span class="hljs-string">"i"</span>: <span class="hljs-number">5</span> }</span>
        ]</span>,
        <span class="hljs-string">"groups"</span>: <span class="hljs-collection">[
            <span class="hljs-collection">{
                <span class="hljs-string">"value : "</span>bar<span class="hljs-string">",
                "</span>count<span class="hljs-string">": 3,
                "</span>sums<span class="hljs-string">": {
                    "</span>i<span class="hljs-string">": 6
                }
            },
            {
                "</span>value : <span class="hljs-string">"baz"</span>,
                <span class="hljs-string">"count"</span>: <span class="hljs-number">2</span>,
                <span class="hljs-string">"sums"</span>: <span class="hljs-collection">{
                    <span class="hljs-string">"i"</span>: <span class="hljs-number">9</span>
                }</span>
            }</span>
        ]</span>,
        <span class="hljs-string">"totalSums"</span>: <span class="hljs-collection">{
            <span class="hljs-string">"i"</span>: <span class="hljs-number">15</span>
        }</span>
    }</span>
}</span></code></pre></li></ul></section></div></div></div>
