---
source_path: docs/api/apiv3/filters.apib
---
<div><div class="description"></div><h1>Filters</h1><div class="panel panel-default"><div class="panel-body"><p>Filter objects can be added to a number of endpoints in the OpenProject APIv3. With them, you can create powerful queries to endpoints to return the data that you want.</p>
<p>They all share the following basic properties:</p>
<ul>
<li>
<p>They consist of three items: A property to filter or a specific filter name, one or more values, and a filter operator that defines what query to produce with the given values</p>
</li>
<li>
<p>You can combine any number of distinct filters can be added to the endpoint definitions in this API documentation</p>
</li>
<li>
<p>A combination of filter objects are treated as an AND filter. OR filters are not yet possible in a single query, but this feature is tracked in <a href="https://community.openproject.com/wp/26837">https://community.openproject.com/wp/26837</a></p>
</li>
</ul>
<h2 id="header-filter-syntax-1">Filter syntax <a class="permalink" href="#header-filter-syntax-1" aria-hidden="true">¶</a></h2>
<p>The filter syntax is a JSON object that can be passed as a GET parameter to the endpoints as an URL-encoded JSON string looks like the following:</p>
<pre><code><span class="hljs-collection">[
  <span class="hljs-collection">{ <span class="hljs-string">"&lt;filter name&gt;"</span>: <span class="hljs-collection">{ <span class="hljs-string">"operator"</span>: <span class="hljs-string">"&lt;operator&gt;"</span>, <span class="hljs-string">"values"</span>: <span class="hljs-collection">[&lt;value&gt;, ...]</span> }</span>,
  ...
]</span>
</span></code></pre>
<p><strong>Example</strong></p>
<p>Filtering the work packages API endpoint for a work package that matches the subject or ID “12” and has a status with the ID=5.</p>
<pre><code><span class="hljs-collection">[
  <span class="hljs-collection">{ <span class="hljs-string">"subjectOrId"</span>: <span class="hljs-collection">{ <span class="hljs-string">"operator"</span>: <span class="hljs-string">"**"</span>, values: <span class="hljs-collection">[<span class="hljs-string">"12"</span>]</span> }</span> }</span>,
  <span class="hljs-collection">{ <span class="hljs-string">"status"</span>: <span class="hljs-collection">{ <span class="hljs-string">"operator"</span>: <span class="hljs-string">"="</span>, values: <span class="hljs-collection">[<span class="hljs-string">"5"</span>]</span> }</span> }</span>
]</span></code></pre>
<p>With the above JSON stringified and URL-encoded, this can be added to the <code>/api/v3/work_packages</code> endpoint using the <code>filter</code> parameter to form the URL:</p>
<pre><code><span class="hljs-keyword">https</span>://community.openproject.com/api/v3/work_packages?filters=<span class="hljs-number">%5</span>B<span class="hljs-number">%7</span>B<span class="hljs-number">%22</span>subjectOrId<span class="hljs-number">%22</span>:<span class="hljs-number">%7</span>B<span class="hljs-number">%22</span>operator<span class="hljs-number">%22</span>:<span class="hljs-number">%22</span>**<span class="hljs-number">%22</span>,<span class="hljs-number">%22</span>values<span class="hljs-number">%22</span>:<span class="hljs-number">%5</span>B<span class="hljs-number">%2212</span><span class="hljs-number">%22</span><span class="hljs-number">%5</span>D<span class="hljs-number">%7</span>D<span class="hljs-number">%7</span>D,<span class="hljs-number">%7</span>B<span class="hljs-number">%22</span>status<span class="hljs-number">%22</span>:<span class="hljs-number">%7</span>B<span class="hljs-number">%22</span>operator<span class="hljs-number">%22</span>:<span class="hljs-number">%22</span>=<span class="hljs-number">%22</span>,<span class="hljs-number">%22</span>values<span class="hljs-number">%22</span>:<span class="hljs-number">%5</span>B<span class="hljs-number">%225</span><span class="hljs-number">%22</span><span class="hljs-number">%5</span>D<span class="hljs-number">%7</span>D<span class="hljs-number">%7</span>D<span class="hljs-number">%5</span>D</code></pre>
<h2 id="header-compression-1">Compression <a class="permalink" href="#header-compression-1" aria-hidden="true">¶</a></h2>
<p>As the above can become quite long, especially if a lot of filter values are included, the API offers to wrap all query props into a zlib compressed and base64 encoded property (<code>eprops</code>).
The property will then not only include the filter but the complete query props set (e.g. <code>pageSize</code>, <code>offset</code> and <code>columns</code>. So <code>eprops</code> is then a JSON object that is compressed and encoded.</p>
<p><strong>Example</strong></p>
<p>Instead of the request</p>
<pre><code><span class="hljs-keyword">https</span>://community.openproject.com/api/v3/work_packages?filters=[<span class="hljs-number">%7</span>B<span class="hljs-number">%22</span>subjectOrId<span class="hljs-number">%22</span>:<span class="hljs-number">%7</span>B<span class="hljs-number">%22</span>operator<span class="hljs-number">%22</span>:<span class="hljs-number">%22</span>**<span class="hljs-number">%22</span>,<span class="hljs-number">%22</span>values<span class="hljs-number">%22</span>:[<span class="hljs-number">%2212</span><span class="hljs-number">%22</span>]<span class="hljs-number">%7</span>D<span class="hljs-number">%7</span>D,<span class="hljs-number">%7</span>B<span class="hljs-number">%22</span>status<span class="hljs-number">%22</span>:<span class="hljs-number">%7</span>B<span class="hljs-number">%22</span>operator<span class="hljs-number">%22</span>:<span class="hljs-number">%22</span>=<span class="hljs-number">%22</span>,<span class="hljs-number">%22</span>values<span class="hljs-number">%22</span>:[<span class="hljs-number">%225</span><span class="hljs-number">%22</span>]<span class="hljs-number">%7</span>D<span class="hljs-number">%7</span>D]&amp;pageSize=10&amp;sortBy=[[<span class="hljs-number">%22</span>id<span class="hljs-number">%22</span>,<span class="hljs-number">%20</span><span class="hljs-number">%22</span>asc<span class="hljs-number">%22</span>]]</code></pre>
<p>Which in a non URL encoded style would be</p>
<pre><code><span class="hljs-atom">https</span>://<span class="hljs-atom">community</span>.<span class="hljs-atom">openproject</span>.<span class="hljs-atom">com</span>/<span class="hljs-atom">api</span>/<span class="hljs-atom">v3</span>/<span class="hljs-atom">work_packages</span>?<span class="hljs-atom">filters</span>=[{<span class="hljs-string">"subjectOrId"</span>:{<span class="hljs-string">"operator"</span>:<span class="hljs-string">"**"</span>,<span class="hljs-string">"values"</span>:[<span class="hljs-string">"12"</span>]}},{<span class="hljs-string">"status"</span>:{<span class="hljs-string">"operator"</span>:<span class="hljs-string">"="</span>,<span class="hljs-string">"values"</span>:[<span class="hljs-string">"5"</span>]}}]&amp;<span class="hljs-atom">pageSize</span>=<span class="hljs-number">10</span>&amp;<span class="hljs-atom">sortBy</span>=[[<span class="hljs-string">"id"</span>, <span class="hljs-string">"asc"</span>]]</code></pre>
<p>All of the props can be put inside a json object</p>
<pre><code><span class="hljs-special">{</span>
  "filters": "<span class="hljs-special">[</span><span class="hljs-special">{</span><span class="hljs-command">\"</span>subjectOrId<span class="hljs-command">\"</span>:<span class="hljs-special">{</span><span class="hljs-command">\"</span>operator<span class="hljs-command">\"</span>:<span class="hljs-command">\"</span>**<span class="hljs-command">\"</span>,<span class="hljs-command">\"</span>values<span class="hljs-command">\"</span>:<span class="hljs-special">[</span><span class="hljs-command">\"</span>12<span class="hljs-command">\"</span><span class="hljs-special">]</span><span class="hljs-special">}</span><span class="hljs-special">}</span>,<span class="hljs-special">{</span><span class="hljs-command">\"</span>status<span class="hljs-command">\"</span>:<span class="hljs-special">{</span><span class="hljs-command">\"</span>operator<span class="hljs-command">\"</span>:<span class="hljs-command">\"</span>=<span class="hljs-command">\"</span>,<span class="hljs-command">\"</span>values<span class="hljs-command">\"</span>:<span class="hljs-special">[</span><span class="hljs-command">\"</span>5<span class="hljs-command">\"</span><span class="hljs-special">]</span><span class="hljs-special">}</span><span class="hljs-special">}</span><span class="hljs-special">]</span>",
  "sortBy": "<span class="hljs-special">[</span><span class="hljs-special">[</span><span class="hljs-command">\"</span>id<span class="hljs-command">\"</span>,<span class="hljs-command">\"</span>asc<span class="hljs-command">\"</span><span class="hljs-special">]</span><span class="hljs-special">]</span>",
  "pageSize": 10
<span class="hljs-special">}</span></code></pre>
<p>Please note, that all objects that have to be json (e.g <code>filters</code>) will be double encoded.</p>
<p>That json object can then be compressed and encoded and the result sent over as the combined <code>eprops</code> parameter:</p>
<pre><code><span class="hljs-keyword">https</span>://community.openproject.com/api/v3/work_packages?eprops=eJxtjTELwjAUhP<span class="hljs-number">%2</span>FLjSWDFVwCLt2cHBz7OsT2VSKFlLwXQUv<span class="hljs-number">%2</span>Bu0lXHe<span class="hljs-number">%2</span>B7<span class="hljs-number">%2</span>B7gN<span class="hljs-number">%0</span>As1<span class="hljs-number">%2</span>BUo8Ci3wiS7k8e9RovE8EWEFaOTkMsidA0BEN4uSWxFNIT2iNhyNlUV50m<span class="hljs-number">%0</span>A<span class="hljs-number">%2</span>BaOdf6zTLg0wkBC1e9f3gv20L52Mpa<span class="hljs-number">%2</span>Ft6h588x<span class="hljs-number">%2</span>BGbQ<span class="hljs-number">%2</span>F5C12YN<span class="hljs-number">%2</span>BM<span class="hljs-number">%3</span>D<span class="hljs-number">%0</span>A</code></pre>
<h2 id="header-available-filters-1">Available filters <a class="permalink" href="#header-available-filters-1" aria-hidden="true">¶</a></h2>
<p>The availaibility of filters depend on the endpoint you’re querying and will be listed in each endpoint definition. For work packages, you can also <a href="https://community.openproject.com/projects/openproject/work_packages">start using filters in the work packages module</a> to build your query and then simply copy the URL from your browser to get the resulting filter values and their operators.</p>
<h2 id="header-available-operators-1">Available operators <a class="permalink" href="#header-available-operators-1" aria-hidden="true">¶</a></h2>
<p>The following table is a list of all available operators. Not all endpoints and parameters support all values, but this list serves as a lookup table for identifying and using the operators. When building a filter object, you use the <strong>symbol</strong> listed below.</p>
<table>
<thead>
<tr>
<th>Symbol</th>
<th>Description of filtered properties</th>
<th>Values array contains</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>=</code></td>
<td>are equal to one of the given value(s)</td>
<td>At least one typed value</td>
</tr>
<tr>
<td><code>!</code></td>
<td>are not equal one of the given value(s)</td>
<td>At least one typed value</td>
</tr>
<tr>
<td><code>&gt;=</code></td>
<td>are greater or equal than the given value</td>
<td>One numerical value</td>
</tr>
<tr>
<td><code>&lt;=</code></td>
<td>are lesser or equal than the given value</td>
<td>One numerical value</td>
</tr>
<tr>
<td><code>t-</code></td>
<td>are the given number of days in the past</td>
<td>1 integer (days)</td>
</tr>
<tr>
<td><code>t+</code></td>
<td>are the given number of days in the future</td>
<td>1 integer (days)</td>
</tr>
<tr>
<td><code>&lt;t+</code></td>
<td>are <em>less than</em> the given number of days in the future</td>
<td>1 integer (days)</td>
</tr>
<tr>
<td><code>&gt;t+</code></td>
<td>are <em>more than</em> the given number of days in the futre</td>
<td>1 integer (days)</td>
</tr>
<tr>
<td><code>&gt;t-</code></td>
<td>are <em>less than</em> the given number of days in the past</td>
<td>1 integer (days)</td>
</tr>
<tr>
<td><code>&lt;t-</code></td>
<td>are <em>more than</em> the given number of days in the past</td>
<td>1 integer (days)</td>
</tr>
<tr>
<td><code>*</code></td>
<td>are not NULL</td>
<td><em>nothing, values is empty</em></td>
</tr>
<tr>
<td><code>!*</code></td>
<td>are NULL</td>
<td><em>nothing, values is empty</em></td>
</tr>
<tr>
<td><code>**</code></td>
<td>searches the given string in all string-based attributes</td>
<td>One string value</td>
</tr>
<tr>
<td><code>=d</code></td>
<td>are on the given date</td>
<td>1 ISO8601 date/datetime</td>
</tr>
<tr>
<td><code>&lt;&gt;d</code></td>
<td>are between the two given dates.</td>
<td>2 ISO8601 date/datetimes</td>
</tr>
<tr>
<td><code>w</code></td>
<td>are in this week</td>
<td><em>nothing, values is empty</em></td>
</tr>
<tr>
<td><code>t</code></td>
<td>are today</td>
<td><em>nothing, values is empty</em></td>
</tr>
<tr>
<td><code>~</code></td>
<td>are containing the given words (SQL LIKE) in that order</td>
<td>At least one string value</td>
</tr>
<tr>
<td><code>!~</code></td>
<td>are <em>not</em> containing the given words (SQL LIKE) in that order</td>
<td>At least one string value</td>
</tr>
</tbody>
</table>
<p>​</p>
<p><strong>Special operators for work packages</strong></p>
<p>There are some additional operators only in use for work packages:</p>
<table>
<thead>
<tr>
<th>Symbol</th>
<th>Description of filtered properties</th>
<th>Values array contains</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>o</code></td>
<td>the status of the work package is <em>open</em></td>
<td><em>nothing, values is empty</em></td>
</tr>
<tr>
<td><code>c</code></td>
<td>the status of the work package is <em>closed</em></td>
<td><em>nothing, values is empty</em></td>
</tr>
<tr>
<td><code>ow</code></td>
<td>the work packages have a manual sort order</td>
<td><em>nothing, values is empty</em></td>
</tr>
</tbody>
</table>
<p>There are also relation filters for work packages that have the symbols <code>blocks/blocked</code> <code>children/parent</code> <code>follows/precedes</code> <code>duplicates/duplicated</code> <code>partof/includes</code> <code>relates</code> <code>requires/required</code> depending on the direction of the relation and take as value the work package ID that is the target node of the relation.</p>
</div></div></div>
